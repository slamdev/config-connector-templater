
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: pubsubsubscriptiontemplates.config-connector-templater.slamdev.net
spec:
  group: config-connector-templater.slamdev.net
  names:
    kind: PubSubSubscriptionTemplate
    listKind: PubSubSubscriptionTemplateList
    plural: pubsubsubscriptiontemplates
    singular: pubsubsubscriptiontemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PubSubSubscriptionTemplate is the Schema for the pubsubsubscriptiontemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              ackDeadlineSeconds:
                description: " This value is the maximum time after a subscriber receives
                  a message \tbefore the subscriber should acknowledge the message.
                  After message \tdelivery but before the ack deadline expires and
                  before the message is \tacknowledged, it is an outstanding message
                  and will not be delivered \tagain during that time (on a best-effort
                  basis). \n \tFor pull subscriptions, this value is used as the initial
                  value for \tthe ack deadline. To override this value for a given
                  message, call \tsubscriptions.modifyAckDeadline with the corresponding
                  ackId if using \tpull. The minimum custom deadline you can specify
                  is 10 seconds. The \tmaximum custom deadline you can specify is
                  600 seconds (10 minutes). \tIf this parameter is 0, a default value
                  of 10 seconds is used. \n \tFor push delivery, this value is also
                  used to set the request timeout \tfor the call to the push endpoint.
                  \n \tIf the subscriber never acknowledges the message, the Pub/Sub
                  system \twill eventually redeliver the message."
                type: integer
              deadLetterPolicy:
                description: " A policy that specifies the conditions for dead lettering
                  messages in \tthis subscription. If dead_letter_policy is not set,
                  dead lettering \tis disabled. \n \tThe Cloud Pub/Sub service account
                  associated with this subscription's \tparent project (i.e., \tservice-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com)
                  must have \tpermission to Acknowledge() messages on this subscription."
                properties:
                  deadLetterTopicRef:
                    properties:
                      external:
                        description: ' The external name of the referenced resource'
                        type: string
                      name:
                        description: ' Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: ' Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  maxDeliveryAttempts:
                    description: " The maximum number of delivery attempts for any
                      message. The value must be \tbetween 5 and 100. \n \tThe number
                      of delivery attempts is defined as 1 + (the sum of number of
                      \tNACKs and number of times the acknowledgement deadline has
                      been exceeded for the message). \n \tA NACK is any call to ModifyAckDeadline
                      with a 0 deadline. Note that \tclient libraries may automatically
                      extend ack_deadlines. \n \tThis field will be honored on a best
                      effort basis. \n \tIf this parameter is 0, a default value of
                      5 is used."
                    type: integer
                type: object
              enableMessageOrdering:
                description: " Immutable. If 'true', messages published with the same
                  orderingKey in PubsubMessage will be delivered to \tthe subscribers
                  in the order in which they are received by the Pub/Sub system. Otherwise,
                  they \tmay be delivered in any order."
                type: boolean
              expirationPolicy:
                description: " A policy that specifies the conditions for this subscription's
                  expiration. \tA subscription is considered active as long as any
                  connected subscriber \tis successfully consuming messages from the
                  subscription or is issuing \toperations on the subscription. If
                  expirationPolicy is not set, a default \tpolicy with ttl of 31 days
                  will be used.  If it is set but ttl is \"\", the \tresource never
                  expires.  The minimum allowed value for expirationPolicy.ttl \tis
                  1 day."
                properties:
                  ttl:
                    description: " Specifies the \"time-to-live\" duration for an
                      associated resource. The \tresource expires if it is not active
                      for a period of ttl. \tIf ttl is not set, the associated resource
                      never expires. \tA duration in seconds with up to nine fractional
                      digits, terminated by 's'. \tExample - \"3.5s\"."
                    type: string
                required:
                - ttl
                type: object
              filter:
                description: " Immutable. The subscription only delivers the messages
                  that match the filter. \tPub/Sub automatically acknowledges the
                  messages that don't match the filter. You can filter messages \tby
                  their attributes. The maximum length of a filter is 256 bytes. After
                  creating the subscription, \tyou can't modify the filter."
                type: string
              messageRetentionDuration:
                description: " How long to retain unacknowledged messages in the subscription's
                  \tbacklog, from the moment a message is published. If \tretainAckedMessages
                  is true, then this also configures the retention \tof acknowledged
                  messages, and thus configures how far back in time a \tsubscriptions.seek
                  can be done. Defaults to 7 days. Cannot be more \tthan 7 days ('\"604800s\"')
                  or less than 10 minutes ('\"600s\"'). \n \tA duration in seconds
                  with up to nine fractional digits, terminated \tby 's'. Example:
                  '\"600.5s\"'."
                type: string
              pushConfig:
                description: " If push delivery is used with this subscription, this
                  field is used to \tconfigure it. An empty pushConfig signifies that
                  the subscriber will \tpull and ack messages using API methods."
                properties:
                  attributes:
                    additionalProperties:
                      type: string
                    description: " Endpoint configuration attributes. \n \tEvery endpoint
                      has a set of API supported attributes that can \tbe used to
                      control different aspects of the message delivery. \n \tThe
                      currently supported attribute is x-goog-version, which you \tcan
                      use to change the format of the pushed message. This \tattribute
                      indicates the version of the data expected by \tthe endpoint.
                      This controls the shape of the pushed message \t(i.e., its fields
                      and metadata). The endpoint version is \tbased on the version
                      of the Pub/Sub API. \n \tIf not present during the subscriptions.create
                      call, \tit will default to the version of the API used to make
                      \tsuch call. If not present during a subscriptions.modifyPushConfig
                      \tcall, its value will not be changed. subscriptions.get \tcalls
                      will always return a valid version, even if the \tsubscription
                      was created without this attribute. \n \tThe possible values
                      for this attribute are: \n \t- v1beta1: uses the push format
                      defined in the v1beta1 Pub/Sub API. \t- v1 or v1beta2: uses
                      the push format defined in the v1 Pub/Sub API."
                    type: object
                  oidcToken:
                    description: " If specified, Pub/Sub will generate and attach
                      an OIDC JWT token as \tan Authorization header in the HTTP request
                      for every pushed message."
                    properties:
                      audience:
                        description: " Audience to be used when generating OIDC token.
                          The audience claim \tidentifies the recipients that the
                          JWT is intended for. The audience \tvalue is a single case-sensitive
                          string. Having multiple values (array) \tfor the audience
                          field is not supported. More info about the OIDC JWT \ttoken
                          audience here: https://tools.ietf.org/html/rfc7519#section-4.1.3
                          \tNote: if not specified, the Push endpoint URL will be
                          used."
                        type: string
                      serviceAccountEmail:
                        description: " Service account email to be used for generating
                          the OIDC token. \tThe caller (for subscriptions.create,
                          subscriptions.patch, and \tsubscriptions.modifyPushConfig
                          RPCs) must have the \tiam.serviceAccounts.actAs permission
                          for the service account."
                        type: string
                    required:
                    - serviceAccountEmail
                    type: object
                  pushEndpoint:
                    description: " A URL locating the endpoint to which messages should
                      be pushed. \tFor example, a Webhook endpoint might use \t\"https://example.com/push\"."
                    type: string
                required:
                - pushEndpoint
                type: object
              resourceID:
                description: ' Immutable. Optional. The name of the resource. Used
                  for creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.'
                type: string
              retainAckedMessages:
                description: " Indicates whether to retain acknowledged messages.
                  If 'true', then \tmessages are not expunged from the subscription's
                  backlog, even if \tthey are acknowledged, until they fall out of
                  the \tmessageRetentionDuration window."
                type: boolean
              retryPolicy:
                description: " A policy that specifies how Pub/Sub retries message
                  delivery for this subscription. \n \tIf not set, the default retry
                  policy is applied. This generally implies that messages will be
                  retried as soon as possible for healthy subscribers. \tRetryPolicy
                  will be triggered on NACKs or acknowledgement deadline exceeded
                  events for a given message"
                properties:
                  maximumBackoff:
                    description: " The maximum delay between consecutive deliveries
                      of a given message. Value should be between 0 and 600 seconds.
                      Defaults to 600 seconds. \tA duration in seconds with up to
                      nine fractional digits, terminated by 's'. Example: \"3.5s\"."
                    type: string
                  minimumBackoff:
                    description: " The minimum delay between consecutive deliveries
                      of a given message. Value should be between 0 and 600 seconds.
                      Defaults to 10 seconds. \tA duration in seconds with up to nine
                      fractional digits, terminated by 's'. Example: \"3.5s\"."
                    type: string
                type: object
              topicRef:
                description: ' Reference to a PubSubTopic.'
                properties:
                  external:
                    description: ' The external name of the referenced resource'
                    type: string
                  name:
                    description: ' Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: ' Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
            required:
            - topicRef
            type: object
          status:
            description: PubSubSubscriptionTemplateStatus defines the observed state
              of PubSubSubscriptionTemplate
            properties:
              ref:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs.  1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage.  2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular     restrictions like, "must
                  refer only to types A and B" or "UID not honored" or "name must
                  be restricted".     Those cannot be well described when embedded.  3.
                  Inconsistent validation.  Because the usages are different, the
                  validation rules are different by usage, which makes it hard for
                  users to predict what will happen.  4. The fields are both imprecise
                  and overly precise.  Kind is not a precise mapping to a URL. This
                  can produce ambiguity     during interpretation and require a REST
                  mapping.  In most cases, the dependency is on the group,resource
                  tuple     and the version of the actual struct is irrelevant.  5.
                  We cannot easily change it.  Because this type is embedded in many
                  locations, updates to this type     will affect numerous schemas.  Don''t
                  make new APIs embed an underspecified API type they do not control.
                  Instead of using this type, create a locally provided and used type
                  that is well-focused on your reference. For example, ServiceReferences
                  for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
